branding:
  institute:
    acronym:  # The acronym that institute goes by
    name:  # The name of the institute
    homePage:  # The URL to the home page of the institute
  maintainers:
    acronym:  # The acronym that maintainers go by
    name:  # The name of the maintainers
    homePage:  # The URL to the home page of the maintainers
i18n:
  languageCode:  # The language code of the portal, like en-gb
  timeZone:  # The time zone of the portal, like Asia/Kolkata
secrets:
  secretKey: '' # 'fifty random characters'
services:
  database:
    # Ideally copy the settings over from postgres/database.env
    host:  # database, or your own server configuration
    port:  # 5432, or your own server configuration
    user:  # Same as database.env, or your own server configuration
    password:  # Same as database.env, or your own server configuration
    name:  # Same as database.env, or your own server configuration
  channelLayer:
    host:  # channel-layer, or your own server configuration
    port:  # 6379, or your own server configuration
  sessionStore:
    host:  # session-store, or your own server configuration
    port:  # 6379, or your own server configuration
  communicationStore:
    host:  # communication-store, or your own server configuration
    port:  # 6379, or your own server configuration
  verificationStore:
    host:  # verification-store, or your own server configuration
    port:  # 6379, or your own server configuration
  notificationStore:
    host: # notification-store or your own server configuration
    port: # 6379, or your own server configuration
  cache:
    host:  # cache, or your own server configuration
    port:  # 11211, or your own server configuration
  messageBroker:
    host:  # message-broker, or your own server configuration
    port:  # 5672, or your own server configuration
    user:  # Same as message_broker.env, or your own server configuration
    password:  # Same as message_broker.env, or your own server configuration
integrations: {}
  # Various useful applications that can connect to Django
  # Freely drop any integration you do not use or need
emails:
  emailBackend: # The backend used for sending emails
  emailHost: # The email service provider used
  emailUseTls: # Whether an email should be encrypted via TLS or not
  emailPort: # The port used by SMTP server
  emailHostUser: # The email address from which all emails will be sent
  emailHostPassword: # The password of the host's email account
ipAddressRings:
# For as many rings as you anticipate, repeat
- name: administrator # Network ring for django admin portal (mandatory)
  patterns:
  - '*' # 'the regex of the IP pattern'
- name: # The name of the network ring
  patterns:
  # For as many IP patterns as each ring contains, repeat
  - '' # 'the regex of the IP pattern'
emails:
  emailBackend: # 'django.core.mail.backends.smtp.EmailBackend'
  emailHost: # 'smtp.gmail.com'
  emailUseTls: # True
  emailPort: # 587
  emailHostUser: # 'host_account@gmail.com'
  emailHostPassword: # 'account's password'
