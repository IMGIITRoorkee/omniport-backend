"""
Django settings for omniport project.

Generated by 'django-admin startproject' using Django 1.11.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

from omniport.utils.discovery import discover

# The location of this file
FILE_PATH = os.path.abspath(__file__)

# The ``settings`` package inside the ``omniport`` package
SETTINGS_DIR = os.path.dirname(FILE_PATH)

# The ``omniport`` package
OMNIPORT_DIR = os.path.dirname(SETTINGS_DIR)

# The base directory, inside which the project rests
BASE_DIR = os.path.dirname(OMNIPORT_DIR)

# The ``configuration`` directory where all settings will be loaded from
CONFIGURATION_DIR = os.path.join(BASE_DIR, 'configuration')

# The ``core`` directory where all Omniport core apps will be loaded from
CORE_DIR = os.path.join(BASE_DIR, 'core')

# The ``services`` directory where all Omniport service apps will be loaded from
SERVICES_DIR = os.path.join(BASE_DIR, 'services')

# The ``apps`` directory where all Omniport drop-in apps will be loaded from
APPS_DIR = os.path.join(BASE_DIR, 'apps')

# Application declarations
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # PyPI packages
    'rest_framework',
    'channels',
    'django_countries',
    'easy_select2',
    'nested_admin',
]

DISCOVERY = {
    'core': {
        'directory': CORE_DIR,
        'apps': list(),
    },
    'services': {
        'directory': SERVICES_DIR,
        'apps': list(),
    },
    'apps': {
        'directory': APPS_DIR,
        'apps': list(),
    },
}

for _, app_group_info in DISCOVERY.items():
    discover(app_group_info)

for app in DISCOVERY.get('core').get('apps'):
    INSTALLED_APPS.append(app.get('listing'))

# Check if shell present and if yes, add to INSTALLED_APPS
SHELL_PRESENT = False
try:
    from shell.apps import ShellConfig

    SHELL_PRESENT = True
    INSTALLED_APPS.append(
        'shell.apps.ShellConfig',
    )
except ImportError:
    # Shell has not been installed
    pass

for app_group in ['services', 'apps']:
    for app in DISCOVERY.get(app_group).get('apps'):
        INSTALLED_APPS.append(app.get('listing'))

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'omniport.middleware.drf_auth.DrfAuth',

    'omniport.middleware.network_rings.NetworkRings',
    'omniport.middleware.person_roles.PersonRoles',
]

ROOT_URLCONF = 'omniport.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'omniport', 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'omniport.context.branding.branding_imagery',
                'omniport.context.branding.branding_text',
                'omniport.context.site.site_information',
            ],
        },
    },
]

# Authentication

AUTH_USER_MODEL = 'kernel.User'

AUTHENTICATION_BACKENDS = [
    'kernel.auth_backends.generalised.GeneralisedAuthBackend',
]

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation'
                '.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation'
                '.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation'
                '.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation'
                '.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

USE_I18N = True

USE_L10N = True

USE_TZ = True

# REST framework

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
}

# Static files

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'omniport', 'static'),
]

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Media files

MEDIA_URL = '/media/'

MEDIA_ROOT = '/media/'

# WSGI application served by Gunicorn
WSGI_APPLICATION = 'omniport.wsgi.application'

# ASGI application served by Daphne
ASGI_APPLICATION = 'omniport.routing.application'

# Swapper models

try:
    if SHELL_PRESENT:
        from shell.swapper import *
except ImportError:
    # Will never enter this block because of the SHELL_PRESENT check
    pass

# Roles

ROLES = list()
