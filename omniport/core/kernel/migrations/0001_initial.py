# Generated by Django 2.0.3 on 2018-04-04 00:04

import swapper

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import kernel.models.auth
import kernel.utils.upload_to


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BiologicalInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('removed', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('date_of_birth', models.DateField()),
                ('blood_group', models.CharField(choices=[('O+', 'O+'), ('O-', 'O-'), ('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=3)),
                ('gender', models.CharField(choices=[('man', 'Man'), ('woman', 'Woman'), ('n-bin', 'Non-binary/Other'), ('n-dis', 'Prefer not to disclose')], max_length=7)),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('n-bin', 'Non-binary/Other'), ('n-dis', 'Prefer not to disclose')], max_length=7)),
                ('pronoun', models.CharField(choices=[('h', 'He/him/his'), ('s', 'She/her/her'), ('t', 'They/them/their')], max_length=1)),
                ('impairment', models.CharField(choices=[('o', 'Orthopaedically impaired'), ('v', 'Visually impaired'), ('h', 'Hearing impaired'), ('s', 'Speech impaired'), ('n', 'No impairment')], max_length=1)),
            ],
            options={
                'verbose_name_plural': 'biological information',
                'swappable': swapper.swappable_setting('kernel', 'BiologicalInformation'),
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('removed', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=7, serialize=False, unique=True)),
                ('name', models.CharField(max_length=127)),
                ('degree', models.CharField(max_length=63)),
                ('graduation', models.CharField(max_length=63)),
                ('semester_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'branches',
                'swappable': swapper.swappable_setting('kernel', 'Branch'),
            },
        ),
        migrations.CreateModel(
            name='Centre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('removed', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=7, serialize=False, unique=True)),
                ('name', models.CharField(max_length=127)),
            ],
            options={
                'swappable': swapper.swappable_setting('kernel', 'Centre'),
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('removed', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=7, serialize=False, unique=True)),
                ('name', models.CharField(max_length=127)),
            ],
            options={
                'swappable': swapper.swappable_setting('kernel', 'Department'),
            },
        ),
        migrations.CreateModel(
            name='FacultyMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('removed', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('designation', models.CharField(max_length=63)),
            ],
            options={
                'swappable': swapper.swappable_setting('kernel', 'FacultyMember'),
            },
        ),
        migrations.CreateModel(
            name='FinancialInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('removed', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('local_bank', models.CharField(blank=True, max_length=63)),
                ('local_bank_account_number', models.CharField(blank=True, max_length=31)),
                ('annual_income', models.DecimalField(blank=True, decimal_places=2, max_digits=31, null=True)),
            ],
            options={
                'verbose_name_plural': 'financial information',
                'swappable': swapper.swappable_setting('kernel', 'FinancialInformation'),
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('removed', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('short_name', models.CharField(blank=True, max_length=63)),
                ('full_name', models.CharField(max_length=255)),
                ('display_picture', models.ImageField(blank=True, max_length=255, null=True, upload_to=kernel.utils.upload_to.UploadTo('kernel', 'profile_pictures'))),
            ],
            options={
                'verbose_name_plural': 'people',
                'swappable': swapper.swappable_setting('kernel', 'Person'),
            },
        ),
        migrations.CreateModel(
            name='PoliticalInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('removed', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('nationality', django_countries.fields.CountryField(max_length=2)),
                ('religion', models.CharField(blank=True, max_length=15)),
                ('passport_number', models.CharField(blank=True, max_length=15)),
                ('driving_license_number', models.CharField(blank=True, max_length=31)),
            ],
            options={
                'verbose_name_plural': 'political information',
                'swappable': swapper.swappable_setting('kernel', 'PoliticalInformation'),
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('removed', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('enrolment_number', models.CharField(max_length=15, serialize=False, unique=True)),
                ('current_year', models.IntegerField()),
                ('current_semester', models.IntegerField()),
                ('current_cgpa', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(10.0), django.core.validators.MinValueValidator(0.0)], verbose_name='current CGPA')),
            ],
            options={
                'swappable': swapper.swappable_setting('kernel', 'Student'),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(blank=True, default=None, max_length=15, null=True, unique=True)),
                ('secret_question', models.CharField(blank=True, max_length=127)),
                ('secret_answer', models.CharField(blank=True, max_length=2047)),
                ('failed_reset_attempts', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(0)])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('person', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=swapper.get_model_name('kernel', 'Person'))),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContactInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('removed', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('primary_phone_number', models.CharField(max_length=15, unique=True)),
                ('secondary_phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('email_address_verified', models.BooleanField(default=False)),
                ('institute_webmail_address', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('entity_object_id', models.PositiveIntegerField()),
                ('entity_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name_plural': 'contact information',
            },
        ),
        migrations.CreateModel(
            name='LocationInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('removed', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=127)),
                ('state', models.CharField(max_length=127)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('postal_code', models.IntegerField(validators=[django.core.validators.RegexValidator('[0-9]{3,9}')])),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=12, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=12, null=True)),
                ('entity_object_id', models.PositiveIntegerField()),
                ('entity_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name_plural': 'location information',
            },
        ),
    ]
