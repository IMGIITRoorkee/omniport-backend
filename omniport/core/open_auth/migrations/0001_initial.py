# Generated by Django 2.1.4 on 2018-12-29 04:28

import django.contrib.postgres.fields
import django.db.models.deletion
import oauth2_provider.generators
from django.conf import settings
from django.db import migrations, models

import formula_one.utils.upload_to
import formula_one.validators.aspect_ratio


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.KERNEL_PERSON_MODEL),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('client_id', models.CharField(db_index=True, default=oauth2_provider.generators.generate_client_id, max_length=100, unique=True)),
                ('redirect_uris', models.TextField(blank=True, help_text='Allowed URIs list, space separated')),
                ('client_type', models.CharField(choices=[('confidential', 'Confidential'), ('public', 'Public')], max_length=32)),
                ('authorization_grant_type', models.CharField(choices=[('authorization-code', 'Authorization code'), ('implicit', 'Implicit'), ('password', 'Resource owner password-based'), ('client-credentials', 'Client credentials')], max_length=32)),
                ('client_secret', models.CharField(blank=True, db_index=True, default=oauth2_provider.generators.generate_client_secret, max_length=255)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('skip_authorization', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('logo', models.ImageField(blank=True, max_length=255, null=True, upload_to=formula_one.utils.upload_to.UploadTo('open_auth', 'application_logos'), validators=[formula_one.validators.aspect_ratio.AspectRatioValidator(1, 0.05)])),
                ('description', models.TextField()),
                ('agrees_to_terms', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('data_points', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('person.short_name', 'Short name'), ('person.full_name', 'Full name'), ('person.display_picture', 'Display picture'), ('person.roles', 'Roles'), ('student.start_date', 'Joining date'), ('student.end_date', 'Graduation date'), ('student.enrolment_number', 'Enrolment number'), ('student.branch.name', 'Branch'), ('student.branch.degree.name', 'Degree'), ('student.current_year', 'Current year'), ('student.current_semester', 'Current semester'), ('student.branch.department.name', 'Department'), ('faculty_member.start_date', 'Joining date'), ('faculty_member.end_date', 'Leaving date'), ('faculty_member.designation', 'Designation'), ('faculty_member.department.name', 'Department'), ('biological_information.date_of_birth', 'Date of birth'), ('biological_information.blood_group', 'Blood group'), ('contact_information.email_address', 'Email address'), ('contact_information.email_address_verified', 'Email address verified'), ('contact_information.institute_webmail_address', 'Institute webmail address'), ('contact_information.primary_phone_number', 'Primary phone number'), ('contact_information.secondary_phone_number', 'Secondary phone number'), ('social_information.links', 'Links')], max_length=127), size=None)),
                ('team_members', models.ManyToManyField(blank=True, to=settings.KERNEL_PERSON_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='open_auth_application', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
